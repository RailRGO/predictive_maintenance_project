import streamlit as st
import reveal_slides as rs

def presentation_page():
    ## Настройки презентации
    with st.sidebar:
        st.header("Настройки презентации")
        theme = st.selectbox("Тема", ["black", "white", "league", "beige", "sky", "night", "serif", "simple", "solarized"], index=0)
        height = st.number_input("Высота слайдов", value=600)
        transition = st.selectbox("Переход", ["slide", "convex", "concave", "zoom", "none"], index=0)
        plugins = st.multiselect("Плагины", ["highlight", "katex", "mathjax2", "mathjax3", "notes", "search", "zoom"], ["highlight", "search"])
    
    ## Содержание презентации в формате Markdown
    presentation_markdown = """
    ## Предиктивное обслуживание оборудования
    ### Бинарная классификация для прогнозирования отказов
    
    ---
    
    ### Введение
    
    - **Задача**: Разработать модель машинного обучения для предсказания отказов оборудования
    - **Цель**: Предсказать, произойдет ли отказ оборудования (Target = 1) или нет (Target = 0)
    - **Практическая значимость**: Снижение затрат на обслуживание и предотвращение простоев
    
    ---
    
    ### Описание датасета
    
    - **Название**: AI4I 2020 Predictive Maintenance Dataset
    - **Источник**: UCI Machine Learning Repository
    - **Объем**: 10 000 записей, 14 признаков
    - **Особенности**: Синтетические данные, моделирующие работу промышленного оборудования
    
    ---
    
    ### Основные признаки
    
    - **Type**: Тип продукта (L, M, H)
    - **Air temperature [K]**: Температура окружающей среды
    - **Process temperature [K]**: Рабочая температура процесса
    - **Rotational speed [rpm]**: Скорость вращения
    - **Torque [Nm]**: Крутящий момент
    - **Tool wear [min]**: Износ инструмента
    
    ---
    
    ### Типы отказов
    
    - **Tool Wear Failure (TWF)**: Отказ из-за износа инструмента
    - **Heat Dissipation Failure (HDF)**: Отказ из-за недостаточного теплоотвода
    - **Power Failure (PWF)**: Отказ из-за недостаточной или избыточной мощности
    - **Overstrain Failure (OSF)**: Отказ из-за перегрузки
    - **Random Failures (RNF)**: Случайные отказы
    
    ---
    
    ### Этапы работы
    
    1. Загрузка и предобработка данных
    2. Исследовательский анализ данных
    3. Обучение моделей машинного обучения
    4. Оценка и сравнение моделей
    5. Создание интерфейса для предсказаний
    
    ---
    
    ### Предобработка данных
    
    - Удаление ненужных столбцов (UDI, Product ID)
    - Преобразование категориальных переменных (Type)
    - Проверка на пропущенные значения
    - Масштабирование числовых признаков
    
    ---
    
    ### Исследовательский анализ
    
    - Распределение целевой переменной (дисбаланс классов)
    - Корреляционный анализ признаков
    - Визуализация распределений признаков
    - Выявление зависимостей между признаками и целевой переменной
    
    ---
    
    ### Обучение моделей
    
    Реализованы следующие модели:
    
    - **Logistic Regression**: Простая и интерпретируемая модель
    - **Random Forest**: Устойчивая к переобучению модель
    - **XGBoost**: Высокоэффективная модель градиентного бустинга
    - **SVM**: Модель с поддержкой нелинейных границ решения
    
    ---
    
    ### Оценка моделей
    
    Метрики для сравнения моделей:
    
    - **Accuracy**: Доля правильных предсказаний
    - **Confusion Matrix**: Матрица ошибок
    - **ROC-AUC**: Площадь под ROC-кривой
    - **Precision, Recall, F1-score**: Метрики для оценки качества классификации
    
    ---
    
    ### Результаты
    
    - Наилучшие результаты показала модель **Random Forest**
    - Достигнута точность (Accuracy) более 95%
    - Важнейшие признаки: Tool wear, Torque, Rotational speed
    - Модель успешно идентифицирует потенциальные отказы оборудования
    
    ---
    
    ### Интерфейс приложения
    
    - **Загрузка данных**: Возможность загрузки данных из UCI репозитория или CSV-файла
    - **Исследовательский анализ**: Визуализация и анализ данных
    - **Обучение модели**: Выбор и настройка параметров модели
    - **Предсказания**: Интерфейс для ввода новых данных и получения предсказаний
    
    ---
    
    ### Практическое применение
    
    - **Снижение затрат**: Уменьшение расходов на ремонт и обслуживание
    - **Предотвращение простоев**: Минимизация времени простоя оборудования
    - **Оптимизация ресурсов**: Эффективное планирование технического обслуживания
    - **Увеличение срока службы**: Продление срока эксплуатации оборудования
    
    ---
    
    ### Возможные улучшения
    
    - Использование более сложных моделей (нейронные сети)
    - Оптимизация гиперпараметров с помощью GridSearch или Bayesian Optimization
    - Применение методов обработки дисбаланса классов (SMOTE, class weights)
    - Разработка системы мониторинга в реальном времени
    
    ---
    
    ### Заключение
    
    - Разработана эффективная модель для предсказания отказов оборудования
    - Создан удобный интерфейс для анализа данных и получения предсказаний
    - Система может быть интегрирована в существующие процессы обслуживания
    - Предиктивное обслуживание позволяет значительно сократить затраты и повысить эффективность производства
    
    ---
    
    ## Спасибо за внимание!
    
    """
    
    ## Отображение презентации
    rs.slides(
        presentation_markdown,
        height=height,
        theme=theme,
        config={
            "transition": transition,
            "plugins": plugins,
        },
        markdown_props={"data-separator": "^---$", "data-separator-vertical": "^--$"}
    )

if __name__ == "__main__":
    presentation_page()